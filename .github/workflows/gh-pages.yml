name: Deploy Docs to GitHub Pages (docToolchain via GHCR)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  packages: read   # <-- nötig, damit der Runner öffentliche GHCR-Images ziehen darf

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build docs via docToolchain (Docker from GHCR)
        run: |
          set -e
          IMAGE=ghcr.io/doctoolchain/dtc:latest
          echo "Pulling $IMAGE..."
          docker pull "$IMAGE"

          # Falls das Image den Befehl direkt erwartet vs. mit 'doctoolchain' – wir probieren beides.
          if ! docker run --rm -v "$PWD":/work -w /work "$IMAGE" generateHTML; then
            docker run --rm -v "$PWD":/work -w /work "$IMAGE" doctoolchain generateHTML
          fi

          # Output finden (Pfad bei Bedarf ergänzen)
          OUT=""
          for p in build/html docs/build/html docs/site; do
            if [ -f "$p/index.html" ]; then OUT="$p"; break; fi
          done
          [ -n "$OUT" ] || { echo "❌ Konnte generiertes HTML nicht finden."; ls -R; exit 1; }
          echo "Gefundener Output: $OUT"

          # In _site kopieren, damit der Upload stabil ist
          rm -rf _site && mkdir -p _site
          cp -a "$OUT"/. _site/

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4