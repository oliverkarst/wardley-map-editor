name: Build & Deploy docs (docToolchain)

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Build docs with docToolchain (SDKMAN)
        shell: bash
        run: |
          set -eo pipefail

          # Preconditions
          if [ ! -f docs/arc42/arc42.adoc ]; then
            echo "Missing docs/arc42/arc42.adoc"; exit 1
          fi

          # Install SDKMAN and docToolchain (kein 'set -u' verwenden!)
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install doctoolchain

          # Minimal config schreiben (beide Dateinamen zur Sicherheit)
          : > docToolchainConfig.groovy
          printf "inputPath  = 'docs/arc42'\n" >> docToolchainConfig.groovy
          printf "outputPath = 'build'\n\n"     >> docToolchainConfig.groovy
          printf "asciidoc = [ inputFiles: ['arc42.adoc'] ]\n" >> docToolchainConfig.groovy
          cp -f docToolchainConfig.groovy Config.groovy

          echo "Effective docToolchainConfig.groovy:"
          cat docToolchainConfig.groovy

          # Build
          doctoolchain . generateHTML

          # Pages-Artifact vorbereiten
          rm -rf _site && mkdir -p _site
          cp -a build/html/. _site/

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4