name: Build & Deploy docs (Alternative)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Download and setup docToolchain
        run: |
          echo "=== Downloading docToolchain directly ==="
          wget -q https://github.com/docToolchain/docToolchain/releases/download/v3.4.0/docToolchain-3.4.0.zip
          unzip -q docToolchain-3.4.0.zip
          chmod +x docToolchain-3.4.0/bin/doctoolchain
          
          echo "=== Verifying docToolchain ==="
          ./docToolchain-3.4.0/bin/doctoolchain --version
          
          echo "=== Setting up environment ==="
          export PATH="$PWD/docToolchain-3.4.0/bin:$PATH"
          echo "PATH=$PWD/docToolchain-3.4.0/bin:$PATH" >> $GITHUB_ENV

      - name: Validate project structure
        run: |
          echo "=== Project structure ==="
          ls -la
          echo "=== docs/ content ==="
          ls -la docs/
          echo "=== arc42/ content ==="
          ls -la docs/arc42/
          echo "=== Checking main document ==="
          if [ -f "docs/arc42/arc42.adoc" ]; then
            echo "✅ Main document found"
            head -20 docs/arc42/arc42.adoc
          else
            echo "❌ Main document missing"
            exit 1
          fi

      - name: Build documentation with Gradle wrapper
        run: |
          # Create Gradle wrapper if it doesn't exist
          if [ ! -f "gradlew" ]; then
            echo "=== Creating Gradle wrapper ==="
            ./docToolchain-3.4.0/bin/doctoolchain . initGradleWrapper
          fi
          
          # Make gradlew executable
          chmod +x gradlew
          
          echo "=== Building with Gradle ==="
          export GRADLE_OPTS="-Dorg.gradle.daemon=false"
          ./gradlew generateHTML --no-daemon --console=plain --stacktrace
          
          echo "=== Checking output ==="
          find . -name "*.html" -type f
          
          if [ -d "build/html" ] && [ -f "build/html/index.html" ]; then
            echo "✅ HTML output generated successfully"
            ls -la build/html/
          else
            echo "❌ HTML generation failed"
            echo "Build directory content:"
            find build -type f 2>/dev/null || echo "No build directory found"
            exit 1
          fi

      - name: Prepare GitHub Pages
        run: |
          echo "=== Preparing deployment ==="
          rm -rf _site
          mkdir -p _site
          
          # Copy HTML files
          if [ -d "build/html" ]; then
            cp -r build/html/* _site/
            echo "✅ Files copied to _site"
            ls -la _site/
          else
            echo "❌ No HTML files to deploy"
            exit 1
          fi

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4