# .github/workflows/gh-pages.yml
name: Deploy Docs to GitHub Pages (docToolchain via SDKMAN)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java (for docToolchain)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Install docToolchain via SDKMAN and build HTML
        run: |
          set -e
          # SDKMAN (non-interactive)
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install doctoolchain

          # Falls deine Doku NICHT im Repo-Root liegt, hier anpassen (z. B. DOC_DIR=docs)
          DOC_DIR="."
          echo "Using DOC_DIR=$DOC_DIR"

          # Build
          doctoolchain "$DOC_DIR" generateHTML

          # Output finden (bei Bedarf Pfade ergänzen)
          OUT=""
          for p in "$DOC_DIR/build/html" "$DOC_DIR/docs/build/html" "$DOC_DIR/docs/site"; do
            if [ -f "$p/index.html" ]; then OUT="$p"; break; fi
          done
          [ -n "$OUT" ] || { echo "❌ Konnte generiertes HTML nicht finden."; ls -R "$DOC_DIR"; exit 1; }
          echo "Gefundener Output: $OUT"

          # Für Upload stabil unter _site bereitstellen
          rm -rf _site && mkdir -p _site
          cp -a "$OUT"/. _site/

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4